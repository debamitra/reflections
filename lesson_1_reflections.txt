How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    a diff outputs the changes per line with the old and new right right after 
    each other this makes comparing easier as one doesnt have to manually go 
    through the whole file to find the changed lines. Thus bug finding is faster
    and more efficient.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Allowing the programmer to revert to older code much faster, bug finding is 
    much faster, always having a backup of older working code in case changes made
    break the software , all these allow us to become better programmers. 

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    pros of manually choosinf to create a commit allows programs to only save code
    that works while experimenting with changes without commiting. Also manual 
    commits allow for tracking who made the commits. It is also easy to revert to
    a perticular verssion of commit . Cons are that changes could get lost in case
    of system crashes/hardware failure in manual commits.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Ffor things like saving code for complex large software system consisting of 
    changes in multiple files constituting one logical change, git is a good way
    to commit while for saving unrelated single files  it is not required

How can you use the commands git log and git diff to view the history of files?

    git log outputs all the commits that have taken place in a repository along
    with a unique commit id, create date and author details. git dff can be use
    to find the changes between two commit versions (using the commit ids) and
    the lines changed in those two versions of commits

How might using version control make you more confident to make changes that
could break something?

    as we can easily find the commit where the change was made and revert the changes

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here